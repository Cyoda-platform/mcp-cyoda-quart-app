import json
import logging
from app_init.app_init import entity_service
from common.config.config import ENTITY_VERSION

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def action_name(data, meta={"token": "cyoda_token"}):
    """Complete business logic"""

    #you might need to save secondary entities defined in entity_design.json if necessary using entity_service
    #SECONDARY_ENTITY_NAME_VAR_id = await entity_service.add_item(
    #         cyoda_token, SECONDARY_ENTITY_NAME_VAR, ENTITY_VERSION, data
    #    )
    #you might need to get secondary entities if necessary using entity_service
    #SECONDARY_ENTITY_NAME_VAR_data = await entity_service.get_item(
    #        cyoda_token, SECONDARY_ENTITY_NAME_VAR, ENTITY_VERSION, entity_id
    #    )
    #update current entity data with calculated results
    #data['attribute'] = calculated value

    except Exception as e:
        logger.error(f"Error in send_teamcity_request: {e}")
        raise