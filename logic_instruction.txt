import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def example_name(cyoda_auth_service, necessary_parameters: dict):
    """
    Example of an asynchronous function to add an entity item to the system.
    :param token: Authentication token for making requests to the entity service.
    :param necessary_parameters: The parameters required to create the entity.
    """
    data = {
        # Example of using the necessary parameters to create the data for the entity
        "param1": necessary_parameters.get("param1"),
        "param2": necessary_parameters.get("param2"),
        "param3": necessary_parameters.get("param3")
    }

    # Add item asynchronously to the entity service
    try:
        entity = await entity_service.add_item(cyoda_auth_service, "entity_name", ENTITY_VERSION, data)
        logger.info(f"Entity added successfully: {entity}")
        return entity
    except Exception as e:
        logger.error(f"Error adding entity: {e}")
        raise